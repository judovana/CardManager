/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreatePackageDialog.java
 *
 * Created on 22.10.2010, 22:50:57
 */
package cardmanager.gui;

import cardmanager.TreeTest;
import cardmanager.impl.CollectionOperator;
import cardmanager.impl.packages.CountedCard;
import cardmanager.impl.packages.PackageDeffinition;
import cardmanager.impl.gui.CardInstanceViewForSelectComponent;
import cardmanager.impl.packages.PackageVerifikationResult;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author Jirka
 */
public class CreatePackageDialog extends javax.swing.JDialog {

    private CollectionOperator collection;
    private SelectCardComponent col;
    private ViewPackagePanel curView;

    /** Creates new form CreatePackageDialog */
    public CreatePackageDialog(java.awt.Frame parent, boolean modal, CollectionOperator c) {
        super(parent, modal);
        initComponents();
        this.collection = c;
        col = new SelectCardComponent(c.getCollectionForSelectingView());
        col.setViewModality(true);
        jPanel2.add(col);
        col.setMultipleSellection(false);
        File[] f = PackageDeffinition.ROOT.listFiles();
        jTree1.setModel(TreeTest.createPkgsModel(this, PackageDeffinition.ROOT, c));
        jTree1.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        jTree1.addTreeSelectionListener(new TreeSelectionListener() {

            public void valueChanged(TreeSelectionEvent e) {

                DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
                jPanel3.removeAll();
                if (node == null) //Nothing is selected.
                {
                    curView = null;
                    jPanel3.validate();
                    jPanel3.repaint();
                    return;
                }

                if (node.isLeaf()) {
                    PackageDeffinition nodeInfo = (PackageDeffinition) node.getUserObject();
                    curView = new ViewPackagePanel(nodeInfo);
                    if (curView != null) {
                        curView.getView().setFilterAlowed(false);
                        jPanel3.add(curView);
                        curView.getView().setMultipleSellection(true);
                    }
                } else {
                    curView = null;
                    jPanel3.validate();
                    jPanel3.repaint();
                    return;
                }
                jPanel3.repaint();
                jPanel3.validate();
            }
        });

        pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jSplitPane2.setDividerLocation(200);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jLabel1.setText("Available packages:");

        jButton1.setText("create new package");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("Export cards in this package to ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportCardsInPAckageAction(evt);
            }
        });

        jScrollPane1.setViewportView(jTree1);

        jButton8.setText("printable html");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8exportCardsInPAckageAction(evt);
            }
        });

        jButton9.setText("viewable html");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9exportCardsInPAckageAction(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton5)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane2.setLeftComponent(jPanel1);

        jSplitPane1.setDividerLocation(220);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jLabel2.setText("Package");

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setTopComponent(jPanel4);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jLabel3.setText("Collection");

        jButton2.setText("^^add to package  ^^");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("ˇˇRemove from packageˇˇ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("edit piles");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setText("validate");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validatePackage(evt);
            }
        });

        jButton7.setText("validate all");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateAll(evt);
            }
        });

        jButton10.setText("generate random package");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(jButton10)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel5);

        jSplitPane2.setRightComponent(jSplitPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 913, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
if (jTree1.getSelectionCount()!=1 || !( (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).isLeaf()){
             JOptionPane.showMessageDialog(this, "No selected package!");
            return;
        }

        if (col.getList().getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "No card selected");
            return;
        }
        PackageDeffinition p = (PackageDeffinition) ((DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).getUserObject();
        CardInstanceViewForSelectComponent c = (CardInstanceViewForSelectComponent) col.getList().getSelectedValue();
        if (p.getCards().contains(c.getCard())) {
            int i = p.getCards().indexOf(c.getCard());
            p.getCards().get(i).setCount(p.getCards().get(i).getCount().intValue() + 1);
        } else {
            p.getCards().add(new CountedCard(c.getCard()));
        }
        p.save();
        curView.refreshView();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
   if (jTree1.getSelectionCount()!=1 || !( (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).isLeaf()){
             JOptionPane.showMessageDialog(this, "No selected package!");
            return;
        }

        if (curView.getView().getList().getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "No card selected");
            return;
        }

        PackageDeffinition p = (PackageDeffinition) ((DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).getUserObject();

        CountedCard c = (CountedCard) curView.getView().getList().getSelectedValue();
        if (c.getCount().intValue() > 1) {
            c.setCount(c.getCount().intValue() - 1);
        } else {
            p.getCards().remove(c);
        }


        p.save();
        curView.refreshView();


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
     if (jTree1.getSelectionCount()!=1 || !( (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).isLeaf()){
             JOptionPane.showMessageDialog(this, "No selected package!");
            return;
        }
        new EditPilesDialog(this, true, (PackageDeffinition) ((DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).getUserObject()).setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        File root=PackageDeffinition.ROOT;
        DefaultMutableTreeNode selected = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        if (selected.isLeaf()){
            root=(File) ((DefaultMutableTreeNode)selected.getParent()).getUserObject();
        }else{
            root=(File) selected.getUserObject();
        }
        String path=root.getAbsolutePath().substring(PackageDeffinition.ROOT.getAbsolutePath().length());
        String s = JOptionPane.showInputDialog("Enter name for package in "+path+" \n("+root.getAbsolutePath()+"): ");
        if (s == null) {
            return;
        }
        s = s.trim();
        if (s.trim().length() <= 1) {
            JOptionPane.showMessageDialog(this, "invalid name");
            return;
        }
//        for (int i = 0; i < cm.getSize(); i++) {
//            if (cm.getElementAt(i).toString().equals(s)) {
//                JOptionPane.showMessageDialog(this, "duplicated name");
//                return;
//            }
//        }
        File dest=new File(root,s);
        if (dest.exists()){
            JOptionPane.showMessageDialog(this, "sorry "+s+"aleady exists in "+path+" ("+dest.getAbsolutePath()+")");
        }
        PackageDeffinition p = PackageDeffinition.creatEmptyPackageDeffinition(dest);
        p.save();
        jTree1.setModel(TreeTest.createPkgsModel(this, PackageDeffinition.ROOT, collection));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void exportCardsInPAckageAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportCardsInPAckageAction
        // TODO add your handling code here:

     if (jTree1.getSelectionCount()!=1 || !( (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).isLeaf()){
             JOptionPane.showMessageDialog(this, "No selected package!");
            return;
        }
        JFileChooser jfch = new JFileChooser();
        jfch.setMultiSelectionEnabled(false);
        jfch.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int ti = jfch.showSaveDialog(this);
        if (ti == JFileChooser.APPROVE_OPTION && jfch.getSelectedFile() != null) {
            PackageDeffinition pp = (PackageDeffinition) (((DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).getUserObject());
            List<Exception> l=pp.exportTo(jfch.getSelectedFile());
            if (!l.isEmpty()){
                StringBuilder sb= new StringBuilder("Following errors occured during exporting: \n");
                for (int i = 0; i < l.size(); i++) {
                    Exception exception = l.get(i);
                    sb.append(exception.toString()).append("\n");

                }
                JOptionPane.showMessageDialog(this, sb.toString());
            }
            
        }

    }//GEN-LAST:event_exportCardsInPAckageAction

    private void validatePackage(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validatePackage

     if (jTree1.getSelectionCount()!=1 || !( (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).isLeaf()){
             JOptionPane.showMessageDialog(this, "No selected package!");
            return;
        }
        PackageDeffinition pp = (PackageDeffinition) ((DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).getUserObject();
        PackageVerifikationResult pvf=new PackageVerifikationResult(pp);
        String s = pvf.saySentence();
        System.out.println(s);
        JOptionPane.showMessageDialog(this, s);
    }//GEN-LAST:event_validatePackage

    private void validateAll(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateAll
        DefaultMutableTreeNode d=(DefaultMutableTreeNode) jTree1.getModel().getRoot();
        int[] c={0,0};
        String s= validateNode(d,c);
        String total="total verified: "+c[0]+", bad: "+c[1];
        System.out.println(total);
        JOptionPane.showMessageDialog(this, total+"\n"+s);
    }//GEN-LAST:event_validateAll

    private void jButton8exportCardsInPAckageAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8exportCardsInPAckageAction
        if (jTree1.getSelectionCount()!=1 || !( (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).isLeaf()){
             JOptionPane.showMessageDialog(this, "No selected package!");
            return;
        }
        JFileChooser jfch = new JFileChooser();
        jfch.setMultiSelectionEnabled(false);
        int ti = jfch.showSaveDialog(this);
        if (ti == JFileChooser.APPROVE_OPTION && jfch.getSelectedFile() != null) {
            if (jfch.getSelectedFile().exists()){
                JOptionPane.showMessageDialog(this, "file exists. Please write name of new file");
                return;
            }
        }
            PackageDeffinition pp = (PackageDeffinition) (((DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).getUserObject());
            List<Exception> l=pp.exportToHtmlPrintable(jfch.getSelectedFile());
            if (!l.isEmpty()){
                StringBuilder sb= new StringBuilder("Following errors occured during exporting: \n");
                for (int i = 0; i < l.size(); i++) {
                    Exception exception = l.get(i);
                    sb.append(exception.toString()).append("\n");

                }
                JOptionPane.showMessageDialog(this, sb.toString());
            }
    }//GEN-LAST:event_jButton8exportCardsInPAckageAction

    private void jButton9exportCardsInPAckageAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9exportCardsInPAckageAction
         if (jTree1.getSelectionCount()!=1 || !( (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).isLeaf()){
             JOptionPane.showMessageDialog(this, "No selected package!");
            return;
        }
        JFileChooser jfch = new JFileChooser();
        jfch.setMultiSelectionEnabled(false);
        int ti = jfch.showSaveDialog(this);
        if (ti == JFileChooser.APPROVE_OPTION && jfch.getSelectedFile() != null) {
            if (jfch.getSelectedFile().exists()){
                JOptionPane.showMessageDialog(this, "file exists. Please write name of new file");
                return;
            }
        }
            PackageDeffinition pp = (PackageDeffinition) (((DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent()).getUserObject());
            List<Exception> l=pp.exportToHtmlVieable(jfch.getSelectedFile());
            if (!l.isEmpty()){
                StringBuilder sb= new StringBuilder("Following errors occured during exporting: \n");
                for (int i = 0; i < l.size(); i++) {
                    Exception exception = l.get(i);
                    sb.append(exception.toString()).append("\n");

                }
                JOptionPane.showMessageDialog(this, sb.toString());
            }
    }//GEN-LAST:event_jButton9exportCardsInPAckageAction

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        RandomPackageDialog rd=new RandomPackageDialog(null, true,collection);
        rd.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        rd.setVisible(true);
        jTree1.setModel(TreeTest.createPkgsModel(this, PackageDeffinition.ROOT, collection));
        
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CreatePackageDialog dialog = new CreatePackageDialog(new javax.swing.JFrame(), true, new CollectionOperator(0));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

  

 

    private String validateNode(DefaultMutableTreeNode d,int[] counter) {
        StringBuilder sb=new StringBuilder();
        if (d.getUserObject() instanceof PackageDeffinition){
            counter[0]++;
            PackageDeffinition pd = (PackageDeffinition) d.getUserObject();
            PackageVerifikationResult pv = new PackageVerifikationResult(pd);
            if (pv.isCheated()) counter[1]++;
            String s=pd.getBackenFile().getName()+": "+pv.saySentence();
            System.out.println(" "+s);
            sb.append(" ").append(s).append("\n");

        }else{
            File f = ((File)(d.getUserObject()));
            System.out.println(f.getAbsoluteFile());
            sb.append(f.getAbsoluteFile()).append("\n");
            int i=d.getChildCount();
            for(int x=0;x<i;x++ ){
            String s =validateNode((DefaultMutableTreeNode) d.getChildAt(x),counter);
            sb.append(" ").append(s).append("\n");
            }
        }
        return sb.toString();
    }
}
